# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := action_after_build
### Rules for action "move_node":
quiet_cmd_binding_gyp_action_after_build_target_move_node = ACTION binding_gyp_action_after_build_target_move_node $@
cmd_binding_gyp_action_after_build_target_move_node = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p lib; cp "$(builddir)/webkitgtk.node" lib/webkitgtk.node

lib/webkitgtk: obj := $(abs_obj)
lib/webkitgtk: builddir := $(abs_builddir)
lib/webkitgtk: TOOLSET := $(TOOLSET)
lib/webkitgtk: $(builddir)/webkitgtk.node FORCE_DO_CMD
	$(call do_cmd,binding_gyp_action_after_build_target_move_node)

all_deps += lib/webkitgtk
action_binding_gyp_action_after_build_target_move_node_outputs := lib/webkitgtk

### Rules for action "move_ext":
quiet_cmd_binding_gyp_action_after_build_target_move_ext = ACTION binding_gyp_action_after_build_target_move_ext $@
cmd_binding_gyp_action_after_build_target_move_ext = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p lib/ext; cp "$(obj).$(TOOLSET)/webextension.so" lib/ext/

lib/ext/webextension: obj := $(abs_obj)
lib/ext/webextension: builddir := $(abs_builddir)
lib/ext/webextension: TOOLSET := $(TOOLSET)
lib/ext/webextension: $(obj).$(TOOLSET)/webextension.so FORCE_DO_CMD
	$(call do_cmd,binding_gyp_action_after_build_target_move_ext)

all_deps += lib/ext/webextension
action_binding_gyp_action_after_build_target_move_ext_outputs := lib/ext/webextension


### Rules for final target.
# Build our special outputs first.
$(obj).target/action_after_build.stamp: | $(action_binding_gyp_action_after_build_target_move_node_outputs) $(action_binding_gyp_action_after_build_target_move_ext_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_action_after_build_target_move_node_outputs) $(action_binding_gyp_action_after_build_target_move_ext_outputs): | $(obj).target/mkdirs.stamp $(builddir)/webkitgtk.node $(builddir)/lib.target/webextension.so $(obj).target/webextension.so

$(obj).target/action_after_build.stamp: TOOLSET := $(TOOLSET)
$(obj).target/action_after_build.stamp: $(obj).target/mkdirs.stamp $(builddir)/webkitgtk.node $(builddir)/lib.target/webextension.so $(obj).target/webextension.so FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/action_after_build.stamp
# Add target alias
.PHONY: action_after_build
action_after_build: $(obj).target/action_after_build.stamp

# Add target alias to "all" target.
.PHONY: all
all: action_after_build

