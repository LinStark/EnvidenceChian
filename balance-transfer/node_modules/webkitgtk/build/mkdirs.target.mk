# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := mkdirs
### Rules for action "make_dirs":
quiet_cmd_binding_gyp_mkdirs_target_make_dirs = ACTION binding_gyp_mkdirs_target_make_dirs $@
cmd_binding_gyp_mkdirs_target_make_dirs = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p lib; mkdir -p lib/ext

lib/ext: obj := $(abs_obj)
lib/ext: builddir := $(abs_builddir)
lib/ext: TOOLSET := $(TOOLSET)
lib/ext:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_mkdirs_target_make_dirs)

all_deps += lib/ext
action_binding_gyp_mkdirs_target_make_dirs_outputs := lib/ext


### Rules for final target.
# Build our special outputs first.
$(obj).target/mkdirs.stamp: | $(action_binding_gyp_mkdirs_target_make_dirs_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_mkdirs_target_make_dirs_outputs): | 

$(obj).target/mkdirs.stamp: TOOLSET := $(TOOLSET)
$(obj).target/mkdirs.stamp:  FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/mkdirs.stamp
# Add target alias
.PHONY: mkdirs
mkdirs: $(obj).target/mkdirs.stamp

# Add target alias to "all" target.
.PHONY: all
all: mkdirs

